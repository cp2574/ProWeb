
@{
    ViewBag.Title = "用户列表";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>@ViewBag.Title</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Home")">主页</a>
            </li>
            <li class="active">
                <strong>@ViewBag.Title</strong>
            </li>
        </ol>
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        <div class="wrapper wrapper-content animated fadeInUp">
            <div class="ibox ui-resizable">
                <div class="ibox-content">
                    <a href="@Url.Action("AddUser", "SystemManagement")" class="btn btn-w-m btn-info">新增用户</a>
                    <table id="tab"></table>
                </div>
            </div>
        </div>
    </div>
</div>
@section Styles{
    <link href="~/Content/table/bootstrap-table.css" rel="stylesheet" />
    <link href="~/Content/table/bootstrap-table-pagejump.css" rel="stylesheet" />
}
@section scripts{
    <script src="~/Scripts/table/dist/bootstrap-table.min.js"></script>
    <script src="~/Scripts/table/bootstrap-table-zh-CN.min.js"></script>
    <script src="~/Scripts/table/bootstrap-table-pagejump.js"></script>

    <script>

        function check() {
            let browser = navigator.userAgent;//用户访问的类型
            let phone = ["Android", "iPhone", "SymbianOS", "Windows Phone", "iPad", "iPod"];//移动端类型
            let type = true;
            for (let i = 0; i < phone.length; i++) {
                if (browser.indexOf(phone[i]) > 0) {//判断是否包含手机类型
                    type = false;
                    break;
                }
            }
            return type;
        }

        $(function () {
        $.post("@Url.Action("GetuserList", "SystemManagement")", function (result) {
            for (var i = 0; i < result.length; i++) {
                //alert(result[i].CreateTime)
                result[i].CreateTime = new Date(parseInt(result[i].CreateTime.replace("/Date(", "").replace(")/", ""), 10)).toLocaleDateString()
               // result[i].CreateTime = timestamp2date(result[i].CreateTime);
            } 
            console.warn(result);
            //加载事件
            $("#tab").bootstrapTable('destroy');
            initTable(!check());
            //$('#tab').bootstrapTable({ cardView: true })
            $('#table').bootstrapTable('refreshOptions', { cardView: true });
            $("#tab").bootstrapTable('load', result);        
        })
        })

        function operateFormatterImg(value, row, index) {
            return [
                ' <img src="' + value +'" alt="头像" class="img-circle" height="72" width="72">',
            ].join('');
        }


        function operateFormatter(value, row, index) {
            return [             
                //' <a class="btn btn-info" href="UserDetailsList/' + row.Id + '" > 详情 </a>',
                ' <a class="btn btn-success" href="EditUser/' + row.Id + '"> 编辑 </a>',
                ' <a class="RemoveUser btn btn-warning" href="javascript:void(0);"> 删除 </a>',
                ' <a class="btn btn-success" href="PasswordReset/' + row.Id + '" > 重置 </a>',
                ' <a class="btn btn-warning" href="UploadHeaderPic/' + row.Id + '"> 头像 </a>',
            ].join('');
        }
        window.operateEvents = {          
            'click .RemoveUser': function (e, value, row, index) {
                if (confirm("您确定删除吗！")) {
                    $(this).attr("href", "RemoveUser/" + row.Id)
                    return true;
                } else {
                    return false;
                }

            },
        };

        function initTable(flge) {        
            $('#tab').bootstrapTable({
                //请求方法
                method: 'get',
                //是否显示行间隔色
                striped: true,
                //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                cache: false,
                //是否显示分页（*）
                pagination: true,
                //是否启用排序
                sortable: true,
                //排序方式
                sortOrder: "asc",
                //初始化加载第一页，默认第一页
                //我设置了这一项，但是貌似没起作用，而且我这默认是0,- -
                //pageNumber:1,
                //每页的记录行数（*）
                pageSize: 10,
                //可供选择的每页的行数（*）
                pageList: [10, 20, 25],
                //这个接口需要处理bootstrap table传递的固定参数,并返回特定格式的json数据
                data: [],
                //是否显示搜索
                search: false,
                strictSearch: true,
                idField: "Id",
                pagination: true,
                showHeader: true,
                showRefresh: false,
                pginationShowPageGo: true,
                //detailView: false,
                cardView: flge,
                showToggle: true,//切换
                showColumns: true,//显示列
                columns: [
                    { title: 'Id', field: 'Id', align: 'center', valign: 'middle', sortable: true, visible: false },
                    {
                        title: 'No', field: 'Avatar', align: 'center', valign: 'middle', align: 'center',
                        formatter: operateFormatterImg
                    },
                    { title: '账号', field: 'UserName', align: 'center', valign: 'middle', },
                    { title: '姓名', field: 'RealName', align: 'center', valign: 'middle', },
                    { title: 'Tel', field: 'PhoneNumber', align: 'center', valign: 'middle', },
                    { title: '创建时间', field: 'CreateTime', align: 'center', valign: 'middle', sortable: true },
                    {
                        title: '操作', field: 'operate', align: 'center', valign: 'middle', events: operateEvents,
                        formatter: operateFormatter
                    },
                ],
            });
        }
  
       
       

     

      


        /**
     * 将unix时间戳转化成日期格式
     */
        function timestamp2date(timestamp) {
            console.log(timestamp);
            var date = new Date(timestamp);
            var strLen = timestamp.toString().length;
            //判断时间戳是否不足13位，不足时低位补0，即乘以10的所差位数次方
            if (strLen < 13) {
                var sub = 13 - strLen;
                sub = Math.pow(10, sub);//计算10的n次方
                date = new Date(timestamp * sub);
            }
            var y = date.getFullYear() + '-';
            var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';
            var d = date.getDate() + ' ';
            var h = date.getHours() + ':';
            var m = date.getMinutes() + ':';
            var s = date.getSeconds();

            return y + M + d + h + m + s;
        }
    </script>}
